{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-29T01:42:05.548Z",
    "end": "2025-01-29T01:42:05.818Z",
    "duration": 270,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "e9ebe1b8-7ffe-4fb3-8cf9-d599a8e9e058",
      "title": "",
      "fullFile": "cypress\\e2e\\1-integration\\2-criarUser\\postUsers.cy.js",
      "file": "cypress\\e2e\\1-integration\\2-criarUser\\postUsers.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2798dd8c-a39f-4bfe-8d58-aeeb05f6f9f1",
          "title": "Teste de API - Cadastro de Usuário",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve cadastrar um usuário e salvar o ID para futuros testes",
              "fullTitle": "Teste de API - Cadastro de Usuário Deve cadastrar um usuário e salvar o ID para futuros testes",
              "timedOut": null,
              "duration": 245,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: apiUrl,\n  body: fakeUser\n}).then(response => {\n  // Verifica se o status code é 201 (Criado)\n  expect(response.status).to.eq(201);\n  // Valida a mensagem de sucesso\n  expect(response.body).to.have.property('message', 'Cadastro realizado com sucesso');\n  // Salva o ID do usuário em um arquivo JSON para reutilização\n  const userId = response.body._id;\n  cy.writeFile('cypress/fixtures/userData.json', {\n    id: userId,\n    nome: fakeUser.nome,\n    email: fakeUser.email\n  });\n  cy.log('Usuário cadastrado com sucesso. ID salvo.');\n});",
              "err": {},
              "uuid": "79bbe940-682b-4a08-984b-2f7af3d52c7c",
              "parentUUID": "2798dd8c-a39f-4bfe-8d58-aeeb05f6f9f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79bbe940-682b-4a08-984b-2f7af3d52c7c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 245,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}