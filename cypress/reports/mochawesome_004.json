{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-01-29T01:42:11.347Z",
    "end": "2025-01-29T01:42:11.883Z",
    "duration": 536,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8a8fd32c-09c5-4906-bbab-bbb129f52f8a",
      "title": "",
      "fullFile": "cypress\\e2e\\1-integration\\5-excluirUser\\deleteUser.cy.js",
      "file": "cypress\\e2e\\1-integration\\5-excluirUser\\deleteUser.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f43481bf-3e32-47ac-b02c-b99a70694553",
          "title": "Teste de API - Exclusão de Usuário",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve excluir o usuário e garantir que ele foi removido",
              "fullTitle": "Teste de API - Exclusão de Usuário Deve excluir o usuário e garantir que ele foi removido",
              "timedOut": null,
              "duration": 496,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Lê o ID do usuário salvo no arquivo JSON\ncy.readFile('cypress/fixtures/userData.json').then(userData => {\n  const userId = userData.id;\n  // Envia a requisição para excluir o usuário\n  cy.request({\n    method: 'DELETE',\n    url: `${apiUrl}/${userId}`\n  }).then(response => {\n    // Verifica se o status code é 200\n    expect(response.status).to.eq(200);\n    // Valida a mensagem de sucesso\n    expect(response.body).to.have.property('message', 'Registro excluído com sucesso');\n    cy.log('Usuário excluído com sucesso.');\n    // Realiza uma consulta para garantir que o usuário foi excluído\n    cy.request({\n      method: 'GET',\n      url: `${apiUrl}/${userId}`,\n      failOnStatusCode: false // Permite que o teste continue se o status não for 2xx\n    }).then(getResponse => {\n      // Verifica se o status code é 400 (Não encontrado)\n      expect(getResponse.status).to.eq(400);\n      // Valida a mensagem de erro\n      expect(getResponse.body).to.have.property('message', 'Usuário não encontrado');\n      cy.log('Validação de exclusão confirmada.');\n    });\n  });\n});",
              "err": {},
              "uuid": "765be716-adfd-4390-a14e-76353aaaf7c7",
              "parentUUID": "f43481bf-3e32-47ac-b02c-b99a70694553",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "765be716-adfd-4390-a14e-76353aaaf7c7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 496,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}